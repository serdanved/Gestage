<?php
/*
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Block_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }

    /*
     * Get block by ID
     */
    function get_block($ID)
    {
        return $this->db->get_where('BLOCKS',array('ID'=>$ID))->row_array();
    }

    function get_block_schedule($ID)
    {
        return $this->db->get_where('BLOCK_SCHEDULES',array('ID'=>$ID))->row_array();
    }

     function get_block_schedules($BLOCK_ID)
    {
        return $this->db->get_where('BLOCK_SCHEDULES',array('BLOCK_ID'=>$BLOCK_ID))->result_array();
    }

    /*
     * Get all blocks
     */
    function get_all_blocks($params)
    {
        $this->db->order_by('DATE', 'asc');
        return $this->db->get('BLOCKS')->result_array();
    }

    function get_all_blocks_by_internship($INTERNSHIP_ID)
    {
        $this->db->order_by('ID', 'asc');
        return $this->db->get_where('BLOCKS',array('INTERNSHIP_ID'=>$INTERNSHIP_ID))->result_array();
    }

    function get_all_block_schedules_by_internship($INTERNSHIP_ID)
    {
        $this->db->order_by('ID', 'asc');
        return $this->db->get_where('BLOCK_SCHEDULES',array('INTERNSHIP_ID'=>$INTERNSHIP_ID))->result_array();
    }

    /*
     * Get all blocks
     */
    function get_all_blocks_where($params)
    {
        $this->db->select('Blo.ID, Blo.NAME, Blo.INTERNSHIP_ID, Blo.DATE_START, Blo.DATE_END,Blo.SCHEDULE,Blo.TOTAL_HOURS, Blo.CURRENT, Tea.NAME AS TEACHER_NAME');
        $this->db->from('BLOCKS AS Blo');
        $this->db->join('TEACHERS AS Tea', 'Blo.TEACHER_ID = Tea.ID','left');
        $this->db->where($params);
        $this->db->order_by('DATE_START', 'asc');
        return $this->db->get()->result_array();
    }

    function get_all_block_schedules_where($params)
    {
        $this->db->from('BLOCK_SCHEDULES');
        $this->db->where($params);
        return $this->db->get()->result_array();
    }

    function get_block_where($params)
    {
        return $this->db->get_where('BLOCKS', $params)->row();
    }

    function get_block_internship_id($id)
    {
        $this->db->select('DISTINCT(BLOCKS.INTERNSHIP_ID) AS INTERNSHIP_ID');
        $this->db->where('ID', $id);
        return $this->db->get('BLOCKS')->row()->INTERNSHIP_ID;
    }

    function get_block_letter($id)
    {
        $this->db->select('BLOCKS.DATE_START AS DATE_DEBUT, BLOCKS.DATE_END AS DATE_FIN, BLOCKS.SCHEDULE AS HORAIRE');
        $this->db->where('INTERNSHIP_ID', $id);
        $this->db->order_by('ID', 'ASC');
        $this->db->limit(4);
        return $this->db->get('BLOCKS')->result_array();
    }

    /*
     * function to add new block
     */
    function add_block($params)
    {
        $this->db->insert('BLOCKS',$params);
        return $this->db->insert_id();
    }

    function add_block_schedule($params)
    {
        $this->db->insert('BLOCK_SCHEDULES',$params);
        return $this->db->insert_id();
    }

    function add_block_schedule_batch($batch) {
        return $this->db->insert_batch("BLOCK_SCHEDULES", $batch);
    }

    function has_block_schedule($id){
        $this->db->where('BLOCK_ID', $id);
        $this->db->from('BLOCK_SCHEDULES');
        return $this->db->count_all_results();
    }

    /*
     * function to update block
     */
    function update_block($ID,$params)
    {
        $this->db->where('ID',$ID);
        return $this->db->update('BLOCKS',$params);
    }

    function update_block_schedules($ID,$params)
    {
        $this->db->where('ID',$ID);
        return $this->db->update('BLOCK_SCHEDULES',$params);
    }

    /*
     * function to delete block
     */
    function delete_block($ID)
    {
        return $this->db->delete('BLOCKS',array('ID'=>$ID));
    }

    function delete_block_schedule($ID)
    {
        return $this->db->delete('BLOCK_SCHEDULES',array('ID'=>$ID));
    }

    function delete_block_schedule_where($params) {
        return $this->db->delete("BLOCK_SCHEDULES", $params);
    }

    function set_current($BLOCK_ID,$INTERNSHIP_ID){
        $params = array('CURRENT' => 1);
        $this->db->where('ID',$BLOCK_ID);
        $this->db->where('INTERNSHIP_ID',$INTERNSHIP_ID);
        $this->db->update('BLOCKS',$params);


        $params = array('CURRENT' => 0);
        $this->db->where('ID !=',$BLOCK_ID);
        $this->db->where('INTERNSHIP_ID',$INTERNSHIP_ID);
        return $this->db->update('BLOCKS',$params);
    }
}
