<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Message_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Student_model');
        $this->load->model('Teacher_model');
        $this->load->model('Employer_model');
    }
    
    /*
     * Get message by ID
     */
    function get_message($ID)
    {
        return $this->db->get_where('MESSAGES',array('ID'=>$ID))->row_array();
    }
        
    function get_messages_for_user($ID,$TYPE)
    {
        $this->db->select("ID,TO_ID,TO_TYPE,FROM_ID,FROM_TYPE");
        $messages = $this->db->get_where("MESSAGES",array("TO_ID"=>$ID,"TO_TYPE"=>$TYPE))->result_array();
        $emails = array();
        foreach($messages as $message) {
            if ($message["FROM_TYPE"] == 1) {
                $this->db->select("MESSAGES.ID, MESSAGES.TITLE, MESSAGES.DESCRIPTION, MESSAGES.READ, MESSAGES.DATE, STUDENTS.NAME AS FROM_NAME, MESSAGES.FROM_TYPE, STUDENTS.ID AS FROM_ID,MESSAGES.INTERNSHIP_ID AS INTERNSHIP_ID");
                $this->db->join('STUDENTS', 'MESSAGES.FROM_ID = STUDENTS.ID');
            }
            if ($message["FROM_TYPE"] == 2) {
                $this->db->select("MESSAGES.ID, MESSAGES.TITLE, MESSAGES.DESCRIPTION, MESSAGES.READ, MESSAGES.DATE, TEACHERS.NAME AS FROM_NAME, MESSAGES.FROM_TYPE, TEACHERS.ID AS FROM_ID,MESSAGES.INTERNSHIP_ID AS INTERNSHIP_ID");
                $this->db->join('TEACHERS', 'MESSAGES.FROM_ID = TEACHERS.ID');
            }
            if ($message["FROM_TYPE"] == 3) {
                $this->db->select("MESSAGES.ID, MESSAGES.TITLE, MESSAGES.DESCRIPTION, MESSAGES.READ, MESSAGES.DATE, EMPLOYERS.EMPLOYER_NAME AS FROM_NAME, MESSAGES.FROM_TYPE, EMPLOYERS.ID AS FROM_ID,MESSAGES.INTERNSHIP_ID AS INTERNSHIP_ID");
                $this->db->join('EMPLOYERS', 'MESSAGES.FROM_ID = EMPLOYERS.ID');
            }            
            $this->db->order_by('DATE', 'DESC');
            $this->db->where(array("MESSAGES.ID" => $message["ID"]));
            $result = $this->db->get('MESSAGES')->row_array();
            array_push($emails,$result);
        }
        return $emails;
    }
    

    function get_messages_unread_by_teacher($TEACHER_ID)
    {
        $this->db->from('MESSAGES');
        $this->db->where('MESSAGES.TO_ID',$TEACHER_ID);
        $this->db->where('MESSAGES.TO_TYPE',2);
        $this->db->where('MESSAGES.READ',0);
        return $this->db->get()->result_array();
    }
    
    function get_messages_unread_by_employer($EMPLOYER_ID)
    {
        $this->db->from('MESSAGES');
        $this->db->where('MESSAGES.TO_ID',$EMPLOYER_ID);
        $this->db->where('MESSAGES.TO_TYPE',3);
        $this->db->where('MESSAGES.READ',0);
        return $this->db->get()->result_array();
    }
    
     function get_messages_unread_by_student($STUDENT_ID)
    {
        $this->db->from('MESSAGES');
        $this->db->where('MESSAGES.TO_ID',$STUDENT_ID);
        $this->db->where('MESSAGES.TO_TYPE',1);
        $this->db->where('MESSAGES.READ',0);
        return $this->db->get()->result_array();
    }


           
    /*
     * Get all messages
     */
    function get_all_messages()
    {
        $this->db->order_by('ID', 'desc');
        return $this->db->get('MESSAGES')->result_array();
    }
        
    /*
     * function to add new message
     */
    function add_message($params)
    {
        $this->db->insert('MESSAGES',$params);
        return $this->db->insert_id();
    }
    
    /*
     * function to update message
     */
    function update_message($ID,$params)
    {
        $this->db->where('ID',$ID);
        return $this->db->update('MESSAGES',$params);
    }
    
    /*
     * function to delete message
     */
    function delete_message($ID)
    {
        return $this->db->delete('MESSAGES',array('ID'=>$ID));
    }
    
    function get_all_messages_for_user($ID, $TYPE)
    {
        switch($TYPE) {
            case 'student':
                $TYPE = 1;
                break;
            case 'teacher':
                $TYPE = 2;
                break;
            case 'employer':
                $TYPE = 3;
                break;
                
        }
        
        return $this->db->get_where('MESSAGES', array('TO_ID' => $ID, 'TO_TYPE' => $TYPE))->result_array();
        
    }
    
    function get_sender_name($ID, $TYPE)
    {
        $table = "";
        
        switch($TYPE) {
            case 1:
                $table = "STUDENTS";
                break;
            case 2:
                $table = "TEACHERS";
                break;
            case 3:
                $table = "EMPLOYERS";
                break;                
        }
        
        return $this->db->get_where($table, array('ID' => $ID))->row()->NAME;
    }
}
