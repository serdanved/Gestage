<?php
/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */

class Lettergenerator_model extends CI_Model {
	function __construct() {
		parent::__construct();
	}

	/*
	 * Get lettergenerator by ID
	 */
	function get_letter($ID) {
		return $this->db->get_where('LETTERS', array('ID' => $ID))->row_array();
	}

	function get_letter_by_name($NAME) {
		return $this->db->get_where('LETTERS', array('NAME' => $NAME))->row_array();
	}

	function copy_letter($source, $dest) {
		$source = $this->get_letter($source);
		$this->db->where('ID', $dest);
		$params = array("CONTENT" => $source["CONTENT"]);
		$this->db->update('LETTERS', $params);
	}

	function get_letters_where($params) {
		return $this->db->get_where('LETTERS', $params)->result_array();
	}

	/*
	 * Get all lettergenerators
	 */
	function get_all_letters() {
		$this->db->order_by('ID', 'desc')->where("DISABLE", 0);
		return $this->db->get('LETTERS')->result_array();
	}

	function get_all_letters_copy() {
		$query = "SELECT LETTERS.*,PROGRAMS.NAME AS PROGRAM_NAME FROM LETTERS LEFT JOIN PROGRAMS ON PROGRAMS.ID = LETTERS.PROGRAM_ID ORDER BY ID DESC";
		//$this->db->order_by('ID', 'desc');
		return $this->db->query($query)->result_array();
	}

	/*
	 * function to add new lettergenerator
	 */
	function add_letter($params) {
		$this->db->insert('LETTERS', $params);
		return $this->db->insert_id();
	}

	/*
	 * function to update lettergenerator
	 */
	function update_letter($ID, $params) {
		$this->db->where('ID', $ID);
		return $this->db->update('LETTERS', $params);
	}

	/*
	 * function to delete lettergenerator
	 */
	function delete_letter($ID) {
		$this->db->where('ID', $ID);
		return $this->db->update('LETTERS', array("DISABLE" => 1));
	}
}
