<?php
/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */

class Block extends MY_Controller {
	function __construct() {
		parent::__construct();
		$this->load->model('Block_model');
		$this->load->model('Internship_model');
	}

	function test($blockId, $internshipId) {
		echo "<pre>\n";
		print_r(generate_block_schedule($blockId, $internshipId));
		echo "\n</pre>";
	}

	/*
	 * Editing a block
	 */
	function edit($ID, $INTERNSHIP_ID) {
		// check if the note exists before trying to edit it
		$data['block'] = $this->Block_model->get_block($ID);
		$data['internship'] = $this->Internship_model->get_internship($INTERNSHIP_ID);

		if (isset($data['block']['ID'])) {
			if (isset($_POST) && count($_POST) > 0) {
				$params = array(
					'NAME' => $this->input->post('NAME'),
					'TEACHER_ID' => $this->input->post('TEACHER_ID'),
					'DATE_START' => $this->input->post('DATE_START'),
					'DATE_END' => $this->input->post('DATE_END'),
					'TOTAL_HOURS' => $this->input->post('TOTAL_HOURS'),
				);

				$this->Block_model->update_block($ID, $params);
                update_block_schedule($ID, $INTERNSHIP_ID);
				redirect("internship/edit/$INTERNSHIP_ID");
			} else {
				$this->load->model('Teacher_model');
				$data['all_teachers'] = $this->Teacher_model->get_all_teachers();
				$data['program_teachers'] = $this->Teacher_model->get_program_teachers($data['internship']['PROGRAM_ID']);

				$data['_view'] = "block/edit";
				$this->load->view('layouts/main', $data);
			}
		} else {
			show_error('Le bloc n\'existe pas');
		}
	}

	function set_current($block_id, $internship_id) {
		$this->Block_model->set_current($block_id, $internship_id);
		redirect("internship/edit/$internship_id");
	}

	function printschedules($block_id, $internship_id) {
		$data['block'] = $this->Block_model->get_block($block_id);
		$data['internship'] = $this->Internship_model->get_internship($internship_id);
		$data['block_schedules'] = $this->Block_model->get_block_schedules($data['block']["ID"]);
		$data['evening'] = 0;
		$schedule_total_hours = 0;
		foreach ($data['block_schedules'] as &$block_schedule) {
			$block_schedule["VALUE"] = json_decode($block_schedule["VALUE"]);
			if (isset($block_schedule["VALUE"]->FROM_EV)) {
				$data['evening'] = 1;
			}
			if (is_numeric($block_schedule["VALUE"]->TOTAL)) {
				$schedule_total_hours += $block_schedule["VALUE"]->TOTAL;
			}
		}
		$data['block']["SCHEDULE_TOTAL_HOURS"] = sprintf("%.2f", $schedule_total_hours);

		$this->load->view('block/printschedules', $data);
	}
}