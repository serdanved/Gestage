<?php
/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */

class Form extends MY_Controller {
	function __construct() {
		parent::__construct();
		$this->load->model('Document_model');
		$this->load->model('Teacher_model');
		$this->load->model('Form_model');
	}

	function generate($ID) {
		$this->load->model('Internship_model');
		$this->load->model('Teacher_model');
		$this->load->model('Student_model');
		$this->load->model('Program_model');
		$this->load->model('Employer_model');
		$this->load->model('Block_model');

		if (isset($_POST) && count($_POST) > 1) {
			$stages = $this->input->post("BLOCK_ID");
			foreach ($stages as $stageid) {
				$data['form'] = $this->Form_model->get_form($ID);
				$content = $data['form']["DATA"];
				$original_content = $content;
				$stage_id = $this->Block_model->get_block_internship_id($stageid);

				$stage = $this->Internship_model->get_internship($stage_id);
				$program = $this->Program_model->get_program($stage['PROGRAM_ID']);
				$teacher = $this->Teacher_model->get_teacher($stage['TEACHER_ID']);
				$student = $this->Student_model->get_student($stage['STUDENT_ID']);
				$employeur = $this->Employer_model->get_employer($stage['EMPLOYER_ID']);
				$blocks = $this->Block_model->get_block_letter($stage_id);
				$block = $this->Block_model->get_block($stageid);

				if ($this->input->post("depot")) {
					$block_data = $this->Block_model->get_block_where(array('ID' => $stageid));
					$real_stageid = $block_data->INTERNSHIP_ID;

					/*

					if (!is_dir('resources/uploads/'.$real_stageid)) {
						mkdir('resources/uploads/'.$real_stageid);
					}

					$path_and_file_name = "resources/uploads/". $real_stageid . "/" . $data['letter']['NAME']." - " . $block["ID"] . " - " .date("Y-m-d").".pdf";



					file_put_contents($path_and_file_name,  $pdf_content);

					*/

					/* DOCUMENT PERMISSIONS AND ADD SECTION */
					if ($this->input->post("ck_CANSEE_EMPLOYERS") == 'on') {
						$can_see_employer = 1;
					} else {
						$can_see_employer = 0;
					}

					if ($this->input->post("ck_CANSEE_STUDENTS") == 'on') {
						$can_see_student = 1;
					} else {
						$can_see_student = 0;
					}

					$can_see_teacher = 1;

					$documentid = insert_upload_entry($real_stageid, $data['form']['NAME'], $can_see_student, $can_see_teacher, $can_see_employer, $block["ID"], $data['form']['ID']);

					/* END DOCUMENT PERMISSIONS AND ADD SECTION */

					/* OBLIGATION ADD SECTION */
					$add_obligation_signature_employer = 0;
					$add_obligation_signature_student = 0;
					$add_obligation_signature_teacher = 0;

					if ($this->input->post("ck_OBLIGATION_EMPLOYERS") == 'on') {
						$add_obligation_employer = 1;
						if (strpos($original_content, 'signature') !== false) {
							$add_obligation_signature_employer = 1;
						} else {
							$add_obligation_signature_employer = 0;
						}
					}

					if ($this->input->post("ck_OBLIGATION_EMPLOYERS") != 'on') {
						$add_obligation_employer = 0;
					}

					if ($this->input->post("ck_OBLIGATION_STUDENTS") == 'on') {
						$add_obligation_student = 1;

						if (strpos($original_content, 'signature') !== false) {
							$add_obligation_signature_student = 1;
						} else {
							$add_obligation_signature_student = 0;
						}
					}

					if ($this->input->post("ck_OBLIGATION_STUDENTS") != 'on') {
						$add_obligation_student = 0;
					}

					if ($this->input->post("ck_OBLIGATION_TEACHERS") == 'on') {
						$add_obligation_teacher = 1;

						if (strpos($original_content, 'signature') !== false) {
							$add_obligation_signature_teacher = 1;
						} else {
							$add_obligation_signature_teacher = 0;
						}
					}

					if ($this->input->post("ck_OBLIGATION_TEACHERS") != 'on') {
						$add_obligation_teacher = 0;
					}

					if ($add_obligation_employer == 1 || $add_obligation_student == 1 || $add_obligation_teacher == 1) {
						insert_obligations_entry($real_stageid, $documentid, $add_obligation_student, $add_obligation_teacher, $add_obligation_employer, $add_obligation_signature_student, $add_obligation_signature_teacher, $add_obligation_signature_employer, $data['form']['DATA']);
					}
					/* END OBLIGATION ADD SECTION */
				}
			}
		}

		$data['stages'] = $this->Internship_model->get_letters_generator_internships($this->session->userdata['userid']);
		$data['form'] = $this->Form_model->get_form($ID);
		$data['_view'] = 'form/generate';
		$this->load->view('layouts/main', $data);
	}

	function render($form_id, $obligation_id = 0) {
		$this->load->model('Internship_model');
		$this->load->model('Teacher_model');
		$this->load->model('Student_model');
		$this->load->model('Program_model');
		$this->load->model('Employer_model');
		$this->load->model('Block_model');
		$this->load->model('Obligation_model');

		$data['form'] = $this->Form_model->get_form($form_id);
		$data['obligation'] = $this->Obligation_model->get_obligation($obligation_id);

		$data['_view'] = 'form/render';
		$this->load->view('layouts/main', $data);
	}

	function view($form_id, $obligation_id) {
		$this->load->model('Internship_model');
		$this->load->model('Teacher_model');
		$this->load->model('Student_model');
		$this->load->model('Program_model');
		$this->load->model('Employer_model');
		$this->load->model('Block_model');
		$this->load->model('Obligation_model');

		$data['form'] = $this->Form_model->get_form($form_id);
		$data['obligation'] = $this->Obligation_model->get_obligation($obligation_id);

		$form_data = json_decode($data['obligation']['FORM_DATA']);
		foreach ($form_data as &$data_value) {
			if ($data_value->type == "signature") {
				$data_value->img = array($data['obligation']["SIGNATURE"]);
			}
		}

		$data['obligation']['FORM_DATA'] = json_encode($form_data);

		$data['_view'] = 'form/view';
		$this->load->view('layouts/main', $data);
	}

	function submit_signature_ajax() {
		if (($this->input->post("SIGNATURE_VALUE")) && ($this->input->post("OBLIGATION_ID"))) {
			$this->load->model('Obligation_model');
			$obligation_id = $this->input->post('OBLIGATION_ID');
			$params = array('SIGNATURE' => $this->input->post('SIGNATURE_VALUE'), 'STATUS' => 2);
			$this->Obligation_model->update_obligation($obligation_id, $params);
			echo "ADDED";
		}
	}

	function submit_ajax() {
		$this->load->model('Obligation_model');

		if (($this->input->post("formId")) && ($this->input->post("formObligation")) && ($this->input->post("formData"))) {
			$params = array('FORM_DATA' => $this->input->post('formData'));
			$this->Obligation_model->update_obligation($this->input->post("formObligation"), $params);
			echo "DONE";
		}
	}

	function add_ajax() {
		if (($this->input->post("formBuilderName")) && ($this->input->post("formBuilderData"))) {
			$program_id = 0;
			if ($this->input->post("formBuilderProgramId")) {
				$program_id = $this->input->post("formBuilderProgramId");
			}

			$params = array(
				'NAME' => $this->input->post('formBuilderName'),
				'PROGRAM_ID' => $program_id,
				'DATA' => $this->input->post('formBuilderData'),
			);

			$form_id = $this->Form_model->add_form($params);
			echo "DONE";
		} else {
			echo "Tous les champs sont nécessaires.";
		}
	}

	function add() {
		$data["all_programs"] = $this->Teacher_model->get_teacher_programs($this->session->userdata("userid"));
		$data['_view'] = 'form/add';
		$this->load->view('layouts/main', $data);
	}

	function index() {
		$data['forms'] = $this->Form_model->get_all_forms();
		$data["all_programs"] = $this->Teacher_model->get_teacher_programs($this->session->userdata("userid"));
		$data['_view'] = 'form/index';
		$this->load->view('layouts/main', $data);
	}

	function edit($ID) {
		$data['form'] = $this->Form_model->get_form($ID);
		$data["all_programs"] = $this->Teacher_model->get_teacher_programs($this->session->userdata("userid"));
		$data['_view'] = 'form/edit';
		$this->load->view('layouts/main', $data);
	}

	function edit_ajax() {
		if (($this->input->post("formBuilderName")) && ($this->input->post("formBuilderData")) && ($this->input->post("formId"))) {
			$program_id = 0;
			if ($this->input->post("formBuilderProgramId")) {
				$program_id = $this->input->post("formBuilderProgramId");
			}

			$params = array(
				'NAME' => $this->input->post('formBuilderName'),
				'PROGRAM_ID' => $program_id,
				'DATA' => $this->input->post('formBuilderData'),
			);

			$this->Form_model->update_form($this->input->post("formId"), $params);
			echo "DONE";
		} else {
			echo "Tous les champs sont nécessaires.";
		}
	}
}